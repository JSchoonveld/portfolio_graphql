"A datetime string with format `Y-m-d H:i:s`, e.g. `2018-05-23 13:43:32`."
scalar DateTime @scalar(class: "Nuwave\\Lighthouse\\Schema\\Types\\Scalars\\DateTime")

"Indicates what fields are available at the top level of a query operation."
type Query {
    "Find a single user by an identifying attribute."
    user(
      "Search by primary key."
      id: ID @eq @rules(apply: ["prohibits:email", "required_without:email"])

      "Search by email address."
      email: String @eq @rules(apply: ["prohibits:id", "required_without:id", "email"])
    ): User @find

    "List multiple users."
    users(
      "Filters by name. Accepts SQL LIKE wildcards `%` and `_`."
      name: String @where(operator: "like")
    ): [User!]! @paginate(defaultCount: 10)

    "List multiple posts."
    posts: [Post!]! @all(defaultCount: 10)
    postsResolver: [Post!]!

    "Find a single post by an identifying attribute."
    post(id: ID @eq): Post @find
    postResolver(id: ID!): Post
}

type Mutation {
    "Create a new post."
    createPost(
        user_id: ID!
        title: String! @rules(apply: ["required", "min:3"])
        body: String! @rules(apply: ["required", "min:3"])
    ) : Post @create
    createPostResolver(
        user_id: ID!
        title: String! @rules(apply: ["required", "min:3"])
        body: String! @rules(apply: ["required", "min:3"])
    ): Post

    "Update a post."
    updatePost(
        id: ID!
        title: String! @rules(apply: ["required", "min:3"])
        body: String! @rules(apply: ["required", "min:3"])
    ) : Post @update

    "Delete a post."
    deletePost(
        id: ID!
    ) : Post @delete
}

"Account of a person who utilizes this application."
type User {
    "Unique primary key."
    id: ID!

    "Non-unique name."
    name: String!

    "Unique email address."
    email: String!

    "When the email was verified."
    email_verified_at: DateTime

    posts: [Post!]! @hasMany

    "When the account was created."
    created_at: DateTime!

    "When the account was last updated."
    updated_at: DateTime!
}

"Blogpost made by a user."
type Post {
    "Unique primary key."
    id: ID!

    "Non-unique title."
    title: String!

    "Non-unique body."
    body: String!

    "The user who made the post."
    user: User! @belongsTo

    "When the account was created."
    created_at: DateTime!

    "When the account was last updated."
    updated_at: DateTime!
}
